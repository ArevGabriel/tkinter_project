from djitellopy import Tello 
import cv2
import numpy as np
import time


def detect_obstacles(frame):
    gray=cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blurred=cv2.GaussianBlur(gray, (15,15), 0)
    edges=cv2.Canny(blurred,50,150)
    contours,_=cv2.findContours(edges, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    
    for contour in contours:
        if cv2.contourArea(contour)>1000:
            x,y,w,h=cv2.boundingRect(contours)
            cv2.rectangle(frame, (x,y),(x+w, y+h), (10,255,0), 2)
    return frame

def main():
    
    drone=Tello()
    drone.connect()
    
    print(f'Battery level: {drone.get_battery()}%')
    
    drone.stream_on()
    
    video_stream=drone.get_frame_read()
    
    drone.takeoff()
    
    try:
        while True:
            frame=video_stream.frame
            frame_with_obstacles=detect_obstacles(frame)
            cv2.imshow('Tello Drone Video', frame_with_obstacles)
            drone.move_forward(50)
            time.sleep(2)
            drone.rotate_clockwise(90)
            time.sleep(2)
            drone.move_forward(50)
            time.sleep(2)
            drone.rotate_clockwise(90)
            time.sleep(2)
            if cv2.waitKey(1) & 0xFF==ord('q'):
                
                break
    finally:
        drone.land()
        drone.end()
        
        video_stream.stop()
        cv2.destroyAllWindows()
        
if __name__=='__main__':
    main()
